plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

group = 'riktortsv'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.4.2'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-javafx', version: '1.4.2'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.22'
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-jpeg', version: '3.4.1'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'com.riktortsv.picdf.app.MainKt'
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClassName
    }
}

javafx {
    version = "15.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

ext {
    jreDir = file("${buildDir}/jre")
}

clean {
    delete jreDir
}

task jlink(dependsOn: compileJava) {
    outputs.dir jreDir

    doLast {
        def jdepsStandardOutput = new ByteArrayOutputStream()
        exec {
            commandLine(
                    'jdeps', '--print-module-deps',
                    '-filter', '^sun\\.reflect$',
                    '--module-path', compileJava.classpath.asPath,
                    '--multi-release', targetCompatibility,
                    compileJava.destinationDir
            )
            standardOutput = jdepsStandardOutput
        }

        def modules = jdepsStandardOutput.toString().strip()

        delete jreDir
        exec {
            commandLine(
                    'jlink',
                    '--compress', '2',
                    '--strip-debug',
                    '--no-header-files',
                    '--no-man-pages',
                    '--vm', 'server',
                    '--add-modules', modules,
                    '--output', jreDir
            )
        }
    }
}

task ktlink(dependsOn: compileKotlin) {
    outputs.dir jreDir

    doLast {
        def jdepsStandardOutput = new ByteArrayOutputStream()
        exec {
            commandLine(
                    'jdeps', '--print-module-deps',
                    '-filter', '^sun\\.reflect$',
                    '--module-path', compileKotlin.classpath.asPath,
                    '--multi-release', targetCompatibility,
                    compileKotlin.destinationDir
            )
            standardOutput = jdepsStandardOutput
        }

        def modules = jdepsStandardOutput.toString().strip()
        println("================================================================================")
        println(compileKotlin.classpath.asPath)
        println(compileKotlin.destinationDir)
        println(modules)
        println("================================================================================")

        delete jreDir
        exec {
            commandLine(
                    'jlink',
                    '--compress', '2',
                    '--strip-debug',
                    '--no-header-files',
                    '--no-man-pages',
                    '--vm', 'server',
                    '--add-modules', modules,
                    '--output', jreDir
            )
        }
    }
}

task bootRunCustomJRE(group: 'application', type: Exec, dependsOn: [jar, ktlink]) {
    commandLine("${jreDir}/bin/java", '-jar', jar.path)
}